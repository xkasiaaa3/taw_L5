{"ast":null,"code":"import { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"input\"];\nconst _c1 = function (a1) {\n  return [\"/blog/detail/\", a1];\n};\nfunction SelectizeComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const p_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c1, p_r2.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", p_r2.text, \"\");\n  }\n}\nexport class SelectizeComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngAfterViewInit() {\n    fromEvent(this.input.nativeElement, 'keyup').pipe(map(event => event['target'].value), debounceTime(700), distinctUntilChanged(), switchMap(value => this.dataService.getByText({\n      text: value\n    }))).subscribe(results => {\n      this.posts$ = results;\n    });\n  }\n}\nSelectizeComponent.ɵfac = function SelectizeComponent_Factory(t) {\n  return new (t || SelectizeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nSelectizeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectizeComponent,\n  selectors: [[\"selectize\"]],\n  viewQuery: function SelectizeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Search by text\", 1, \"form-control\"], [\"input\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 3, \"routerLink\"]],\n  template: function SelectizeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0, 1);\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, SelectizeComponent_li_3_Template, 3, 4, \"li\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts$);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAMA,SAASA,SAAS,QAAQ,MAAM;AAChC,SAAQC,YAAY,EAAEC,oBAAoB,EAAEC,GAAG,EAAEC,SAAS,QAAO,gBAAgB;;;;;;;;;;;ICJ/EC,0BAA6B;IACyBA,YAAY;IAAAA,iBAAI;;;;IAAxDA,eAAsC;IAAtCA,gEAAsC;IAAEA,eAAY;IAAZA,yCAAY;;;ADcpE,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAC/B;EAEAC,eAAe;IACbT,SAAS,CAAC,IAAI,CAACU,KAAK,CAACC,aAAa,EAAE,OAAO,CAAC,CACzCC,IAAI,CACHT,GAAG,CAAEU,KAAU,IAAKA,KAAK,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,EAC1Cb,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE,EACtBE,SAAS,CAACU,KAAK,IAAI,IAAI,CAACN,WAAW,CAACO,SAAS,CAAC;MAACC,IAAI,EAAEF;IAAK,CAAC,CAAC,CAAC,CAC9D,CAACG,SAAS,CAAEC,OAAY,IAAI;MAC7B,IAAI,CAACC,MAAM,GAAGD,OAAO;IACvB,CAAC,CAAC;EACJ;;;mBAlBWZ,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAc;EAAAC;IAAA;;;;;;;;;;;;;MClB/BhB,8BAA4E;MAE5EA,0BAAI;MACFA,iEAC2E;MAC7EA,iBAAK;;;MAFeA,eAAS;MAATA,oCAAS","names":["fromEvent","debounceTime","distinctUntilChanged","map","switchMap","i0","SelectizeComponent","constructor","dataService","ngAfterViewInit","input","nativeElement","pipe","event","value","getByText","text","subscribe","results","posts$","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\darek\\Downloads\\L14_TAW-master(1)\\L14_TAW-master\\blog-client\\src\\app\\components\\selectize\\selectize.component.ts","C:\\Users\\darek\\Downloads\\L14_TAW-master(1)\\L14_TAW-master\\blog-client\\src\\app\\components\\selectize\\selectize.component.html"],"sourcesContent":["import {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, switchMap} from 'rxjs/operators';\nimport {DataService} from \"../../services/data.service\";\n\n\n\n\n@Component({\n  selector: 'selectize',\n  templateUrl: './selectize.component.html',\n  styleUrls: ['./selectize.component.css']\n})\nexport class SelectizeComponent implements AfterViewInit {\n\n  @ViewChild('input', { static: true }) input?: ElementRef<HTMLElement> | any;\n  public posts$: any;\n\n  constructor(private dataService: DataService) {\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.input.nativeElement, 'keyup')\n      .pipe(\n        map((event: any) => event['target'].value),\n        debounceTime(700),\n        distinctUntilChanged(),\n        switchMap(value => this.dataService.getByText({text: value}))\n      ).subscribe((results: any) => {\n      this.posts$ = results;\n    });\n  }\n}\n","<input #input type=\"text\" class=\"form-control\" placeholder=\"Search by text\">\n\n<ul>\n  <li *ngFor=\"let p of posts$\">\n    <a href=\"#\" [routerLink]=\"['/blog/detail/', p.id]\"> {{ p.text }}</a></li>\n</ul>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}