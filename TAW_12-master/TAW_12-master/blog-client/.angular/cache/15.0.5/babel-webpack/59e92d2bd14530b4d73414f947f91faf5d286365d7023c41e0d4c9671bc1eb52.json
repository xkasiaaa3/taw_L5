{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.isLoggedIn()) {\n      // redirect to some view explaining what happened\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,gBAAW,GAAXD,WAAW;IAAsB,WAAM,GAANC,MAAM;EAC3D;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MAClC;MACA,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;;;mBAfWR,SAAS;AAAA;;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","isLoggedIn","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\darek\\Downloads\\L14_TAW-master(1)\\L14_TAW-master\\blog-client\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, public router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      // redirect to some view explaining what happened\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}